---                                                         ---
---   !#####        !#####  !###################            ---
---    !#####        !#####  !###################           ---
---     !#####        !#####                !#####          ---
---      !#####  !###  !#####            !#######           ---
---       !##### !##### !#####        !#######              ---
---        !###################    !#######                 ---
---         !########  !########  !#####                    ---
---          !#######    !#######  !###################     ---
---           !#####        !#####  !###################    ---
---                                                         ---
---    !####    ####  !####    !####  !###########          ---
---     !####    ####  !####    !####  !############        ---
---      !####    ####  !####    !####  !####    !###       ---
---       !############  !####    !####  !###########       ---
---        !############  !####    !####  !###########      ---
---         !####    ####  !####    !####  !####    !###    ---
---          !####    ####  !#####  !#####  !####    !###   ---
---           !####    ####   !###########   !############  ---
---            !####    ####     !#######     !##########   ---
---                                                         ---
---                  ~ Made by VVarzones ~                  ---
---                                                         ---


-- Main Properties

hubn = "WZ HUB"
hubv = "0.2 TEST"
hubc = "VVarzones"

local plr = game.Players.LocalPlayer
local plrg = plr.PlayerGui

local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local ts = game:GetService("TweenService")


-- Create GUI

local hubg = Instance.new("ScreenGui", plrg)
hubg.Name = hubn.." | v"..hubv

local holderf = Instance.new("Frame", hubg)
holderf.Name = "HolderFrame"
holderf.AnchorPoint = Vector2.new(0.5, 0.5)
holderf.Position = UDim2.new(0.5, 0, 0.5, 0)
holderf.Size = UDim2.new(0.3, 0, 0.5, 0)
holderf.BackgroundTransparency = 1
holderf.Active = true

local holderfc = Instance.new("UICorner", holderf)
holderfc.CornerRadius = UDim.new(0, 12)


-- Create Topbar

local topbarf = Instance.new("Frame", holderf)
topbarf.Name = "TopbarFrame"
topbarf.AnchorPoint = Vector2.new(0.5, 0.5)
topbarf.Position = UDim2.new(0.5, 0, 0.035, 0)
topbarf.Size = UDim2.new(1, 0, 0.07, 0)
topbarf.BackgroundColor3 = Color3.fromRGB(27, 31, 40)
topbarf.ZIndex = 2

local topbarfc = Instance.new("UICorner", topbarf)
topbarfc.CornerRadius = UDim.new(0, 12)

local closeb = Instance.new("ImageButton", topbarf)
closeb.Name = "Close"
closeb.AnchorPoint = Vector2.new(0.5, 0.5)
closeb.Position = UDim2.new(0.97, 0, 0.5, 0)
closeb.Size = UDim2.new(0.03, 0, 0.45, 0)
closeb.BackgroundColor3 = Color3.fromRGB(255, 125, 125)
closeb.ZIndex = 2
closeb.ImageTransparency = 1

local closebc = Instance.new("UICorner", closeb)
closebc.CornerRadius = UDim.new(0, 20)

local minimizeb = Instance.new("ImageButton", topbarf)
minimizeb.Name = "Minimize"
minimizeb.AnchorPoint = Vector2.new(0.5, 0.5)
minimizeb.Position = UDim2.new(0.927, 0, 0.5, 0)
minimizeb.Size = UDim2.new(0.03, 0, 0.45, 0)
minimizeb.BackgroundColor3 = Color3.fromRGB(255, 232, 138)
minimizeb.ZIndex = 2
minimizeb.ImageTransparency = 1

local minimizebc = Instance.new("UICorner", minimizeb)
minimizebc.CornerRadius = UDim.new(0, 20)

local titlel = Instance.new("TextLabel", topbarf)
titlel.Name = "Title"
titlel.AnchorPoint = Vector2.new(0.5, 0.5)
titlel.Position = UDim2.new(0.125, 0, 0.55, 0)
titlel.Size = UDim2.new(0.2, 0, 0.7, 0)
titlel.BackgroundTransparency = 1
titlel.ZIndex = 2
titlel.TextScaled = true
titlel.RichText = true
titlel.TextColor3 = Color3.fromRGB(255, 255, 255)
titlel.Font = "Nunito"
titlel.TextXAlignment = "Left"
titlel.TextYAlignment = "Center"
titlel.Text = "<i>"..hubn.."</i>"

local titlelg = Instance.new("UIGradient", titlel)
titlelg.Rotation = 90
titlelg.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
})

local versionl = Instance.new("TextLabel", topbarf)
versionl.Name = "Version"
versionl.AnchorPoint = Vector2.new(0.5, 0.5)
versionl.Position = UDim2.new(0.3, 0, 0.55, 0)
versionl.Size = UDim2.new(0.2, 0, 0.7, 0)
versionl.BackgroundTransparency = 1
versionl.ZIndex = 2
versionl.TextScaled = true
versionl.RichText = true
versionl.TextColor3 = Color3.fromRGB(255, 255, 255)
versionl.Font = "Nunito"
versionl.TextXAlignment = "Left"
versionl.TextYAlignment = "Center"
versionl.Text = "<i>v"..hubv.."</i>"

local versionlg = Instance.new("UIGradient", versionl)
versionlg.Rotation = 90
versionlg.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
})


-- Create Main

local mainf = Instance.new("Frame", holderf)
mainf.Name = "MainFrame"
mainf.AnchorPoint = Vector2.new(0.5, 0.5)
mainf.Position = UDim2.new(0.5, 0, 0.511, 0)
mainf.Size = UDim2.new(1, 0, 0.979, 0)
mainf.BackgroundColor3 = Color3.fromRGB(27, 31, 40)
mainf.ZIndex = 1

local mainfc = Instance.new("UICorner", mainf)
mainfc.CornerRadius = UDim.new(0, 12)

local mainfg = Instance.new("UIGradient", mainf)
mainfg.Rotation = 75
mainfg.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(0.3, Color3.fromRGB(255, 255, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 150, 150))
})

local testl1 = Instance.new("TextLabel", mainf)
testl1.Name = "TestLabel1"
testl1.AnchorPoint = Vector2.new(0.5, 0.5)
testl1.Position = UDim2.new(0.5, 0, 0.1, 0)
testl1.Size = UDim2.new(0.95, 0, 0.05, 0)
testl1.BackgroundColor3 = Color3.fromRGB(36, 41, 53)
testl1.TextScaled = true
testl1.RichText = true
testl1.TextColor3 = Color3.fromRGB(255, 255, 255)
testl1.Font = "Nunito"
testl1.TextXAlignment = "Left"
testl1.TextYAlignment = "Center"
testl1.Text = " This is a <b>test</b> GUI"

local testl1c = Instance.new("UICorner", testl1)
testl1c.CornerRadius = UDim.new(0, 8)

local testl2 = Instance.new("TextLabel", mainf)
testl2.Name = "TestLabel2"
testl2.AnchorPoint = Vector2.new(0.5, 0.5)
testl2.Position = UDim2.new(0.5, 0, 0.175, 0)
testl2.Size = UDim2.new(0.95, 0, 0.05, 0)
testl2.BackgroundColor3 = Color3.fromRGB(36, 41, 53)
testl2.TextScaled = true
testl2.RichText = true
testl2.TextColor3 = Color3.fromRGB(255, 255, 255)
testl2.Font = "Nunito"
testl2.TextXAlignment = "Left"
testl2.TextYAlignment = "Center"
testl2.Text = " Made by <b>"..hubc.."</b> :)"

local testl2c = Instance.new("UICorner", testl2)
testl2c.CornerRadius = UDim.new(0, 8)

local testb1 = Instance.new("TextButton", mainf)
testb1.Name = "TestButton1"
testb1.AnchorPoint = Vector2.new(0.5, 0.5)
testb1.Position = UDim2.new(0.5, 0, 0.25, 0)
testb1.Size = UDim2.new(0.95, 0, 0.05, 0)
testb1.BackgroundColor3 = Color3.fromRGB(47, 54, 70)
testb1.TextScaled = true
testb1.TextColor3 = Color3.fromRGB(255, 255, 255)
testb1.Font = "Nunito"
testb1.TextXAlignment = "Left"
testb1.TextYAlignment = "Center"
testb1.Text = " Test button"

local testb1c = Instance.new("UICorner", testb1)
testb1c.CornerRadius = UDim.new(0, 8)


-- Button Functions

minimizeb.MouseButton1Click:Connect(function()
	mainf.Visible = not mainf.Visible
	holderf.Active = mainf.Visible
end)

closeb.MouseButton1Click:Connect(function()
	hubg.Enabled = false
end)

uis.InputBegan:Connect(function(key)
	if key.KeyCode == Enum.KeyCode.RightShift then
		hubg.Enabled = not hubg.Enabled
	end
end)

testb1.MouseButton1Click:Connect(function()
	testb1.Text = " Got your cookies"
end)

-- Dragging GUI

local gui = holderf

local dragging
local dragInput
local dragStart
local startPos

function Lerp(a, b, m)
	return a + (b - a) * m
end;

local lastMousePos
local lastGoalPos
local DRAG_SPEED = (8);
function Update(dt)
	if not (startPos) then return end;
	if not (dragging) and (lastGoalPos) then
		gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, lastGoalPos.X.Offset, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, lastGoalPos.Y.Offset, dt * DRAG_SPEED))
		return 
	end;

	local delta = (lastMousePos - uis:GetMouseLocation())
	local xGoal = (startPos.X.Offset - delta.X);
	local yGoal = (startPos.Y.Offset - delta.Y);
	lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
	gui.Position = UDim2.new(startPos.X.Scale, Lerp(gui.Position.X.Offset, xGoal, dt * DRAG_SPEED), startPos.Y.Scale, Lerp(gui.Position.Y.Offset, yGoal, dt * DRAG_SPEED))
end;

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position
		lastMousePos = uis:GetMouseLocation()

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

rs.Heartbeat:Connect(Update)
